name: Android Release

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - closed

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
  
      - name: Check PR merge or commit message
        id: pr_or_commit
        if: github.event_name == 'pull_request' && github.event.action == 'closed' || contains(github.event.head_commit.message, 'build release')

        run: |
          if [[ ${{ github.event_name }} == 'pull_request' && ${{ github.event.pull_request.merged }} == 'true' ]]; then
            PR_MERGED=true
            echo "PR_MERGED=true" >> $GITHUB_ENV
          fi
          if [[ ${{ github.event_name }} == 'push' ]]; then
            COMMIT_MESSAGE=$(git log -1 --pretty=format:%s)
            if [[ $COMMIT_MESSAGE == "build release" ]]; then
              BUILD_RELEASE=true
              echo "BUILD_RELEASE=true" >> $GITHUB_ENV
            fi
          fi
  
      - name: Setup Java 
        if: ${{ steps.pr_or_commit.outputs.PR_MERGED == 'true' || steps.pr_or_commit.outputs.BUILD_RELEASE == 'true' }}
        uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "12.x"
          cache: "gradle"
      
      # Sets up Flutter using the subosito Flutter workflow
      - name: Sets up Flutter using the subosito Flutter workflow
        if: ${{ steps.pr_or_commit.outputs.PR_MERGED == 'true' || steps.pr_or_commit.outputs.BUILD_RELEASE == 'true' }}
        uses: subosito/flutter-action@v2
        with:
        # Adjusts to the Flutter version you are working with
          flutter-version: "3.10.4"
          channel: 'stable'
          # enabling caching for the Flutter SDK
          cache: true

      # caching build  - gradle  - pub-cache
      - name: Cache
        if: ${{ steps.pr_or_commit.outputs.PR_MERGED == 'true' || steps.pr_or_commit.outputs.BUILD_RELEASE == 'true' }}
        uses: actions/cache@v2
        with:
          path: |
            build/
            android/.gradle/
          key: ${{ runner.os }}-build_and_android-${{ hashFiles('**/*.gradle*', 'pubspec.lock') }}

      - name: Install Flutter dependencies
        if: ${{ steps.pr_or_commit.outputs.PR_MERGED == 'true' || steps.pr_or_commit.outputs.BUILD_RELEASE == 'true' }}
        run: flutter pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      - name: Analyze project 
        if: ${{ steps.pr_or_commit.outputs.PR_MERGED == 'true' || steps.pr_or_commit.outputs.BUILD_RELEASE == 'true' }}
        run: flutter analyze
      
      - name: Read release version
        id: read-version
        if: ${{ steps.pr_or_commit.outputs.PR_MERGED == 'true' || steps.pr_or_commit.outputs.BUILD_RELEASE == 'true' }}
        uses: NiklasLehnfeld/flutter-version-number-action@main
        with:
          file-path: pubspec.yaml      
      
      - name: Start release build APK
        if: ${{ steps.pr_or_commit.outputs.PR_MERGED == 'true' || steps.pr_or_commit.outputs.BUILD_RELEASE == 'true' }}
        run: flutter build apk --release

      # Uploaded the APK release as an artifact to be used in the next job
      - name: Upload APK Release
        if: ${{ steps.pr_or_commit.outputs.PR_MERGED == 'true' || steps.pr_or_commit.outputs.BUILD_RELEASE == 'true' }}
        uses: actions/upload-artifact@v2
        with:
          name: apk-release
          path: build/app/outputs/flutter-apk/app-release.apk

      # --- creating github apk-release ---
      - name: Create apk-release in GitHub
        if: ${{ steps.pr_or_commit.outputs.PR_MERGED == 'true' || steps.pr_or_commit.outputs.BUILD_RELEASE == 'true' }}
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/app-release.apk"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: apk_Release_${{ steps.read-version.outputs.version-number }}
          allowUpdates: true
